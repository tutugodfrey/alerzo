apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: test-cluster
  region: eu-west-1
  version: "1.20"
privateCluster:
  enabled: false
cloudWatch:
  clusterLogging: {}
iam:
  vpcResourceControllerPolicy: true
  withOIDC: true
vpc:
  autoAllocateIPv6: false
  cidr: 10.10.0.0/16
  clusterEndpoints:
    privateAccess: false
    publicAccess: true
  id: vpc-092b25d5999a06be5
  manageSharedNodeSecurityGroupRules: true
  nat:
    gateway: Disable
  subnets:
    private:
      eu-west-1a:
        az: eu-west-1a
        cidr: 10.10.30.0/24
        id: subnet-0a9f03a49cb706a3b
      eu-west-1b:
        az: eu-west-1b
        cidr: 10.10.40.0/24
        id: subnet-06431c4f6c896aa02
      eu-west-1c:
        az: eu-west-1c
        cidr: 10.10.50.0/24
        id: subnet-0ea0746fa51bdbbcf
    public:
      eu-west-1a:
        az: eu-west-1a
        cidr: 10.10.1.0/24
        id: subnet-012210c825285dd99
      eu-west-1b:
        az: eu-west-1b
        cidr: 10.10.10.0/24
        id: subnet-0067fafc0a6cc612a
      eu-west-1c:
        az: eu-west-1c
        cidr: 10.10.20.0/24
        id: subnet-0a28b929a2069171a
managedNodeGroups:
- name: ng-default
  amiFamily: AmazonLinux2
  desiredCapacity: 2
  maxSize: 30
  minSize: 1
  disableIMDSv1: false
  disablePodIMDS: false
  iam:
    withAddonPolicies:
      albIngress: false
      appMesh: false
      appMeshPreview: false
      autoScaler: true
      certManager: false
      cloudWatch: true
      ebs: true
      efs: false
      externalDNS: false
      fsx: false
      imageBuilder: false
      xRay: true
  instanceName: test-cluster-ng-default
  instanceSelector: {}
  instanceTypes:
  - t3.medium
  labels:
    alpha.eksctl.io/cluster-name: test-cluster
    alpha.eksctl.io/nodegroup-name: ng-default
  privateNetworking: false
  releaseVersion: ""
  securityGroups:
    withLocal: null
    withShared: null
  ssh:
    allow: false
    enableSsm: true
    publicKeyPath: ""
  tags:
    alpha.eksctl.io/nodegroup-name: ng-default
    alpha.eksctl.io/nodegroup-type: managed
  volumeIOPS: 3000
  volumeSize: 80
  volumeThroughput: 125
  volumeType: gp3
- name: ng-dedicated
  amiFamily: AmazonLinux2
  desiredCapacity: 1
  maxSize: 5
  minSize: 1
  disableIMDSv1: false
  disablePodIMDS: false
  iam:
    withAddonPolicies:
      albIngress: false
      appMesh: false
      appMeshPreview: false
      autoScaler: true
      certManager: false
      cloudWatch: false
      ebs: true
      efs: false
      externalDNS: false
      fsx: false
      imageBuilder: false
      xRay: true
  instanceName: test-cluster-ng-dedicated
  instanceSelector: {}
  instanceTypes:
  - t3.medium
  labels:
    alpha.eksctl.io/cluster-name: test-cluster
    alpha.eksctl.io/nodegroup-name: ng-dedicated
    purpose: integrations
  preBootstrapCommands:
    - sed -i '/^KUBELET_EXTRA_ARGS=/a KUBELET_EXTRA_ARGS+=" --register-with-taints=integrations=true:NoSchedule"' /etc/eks/bootstrap.sh
  tags:
    alpha.eksctl.io/nodegroup-name: ng-dedicated
    alpha.eksctl.io/nodegroup-type: managed
    k8s.io/cluster-autoscaler/node-template/label/purpose: integrations
    k8s.io/cluster-autoscaler/node-template/taint/integrations: "true:NoSchedule"
  privateNetworking: true
  releaseVersion: ""
  securityGroups:
    withLocal: null
    withShared: null
  ssh:
    allow: false
    enableSsm: true
    publicKeyPath: ""
  volumeIOPS: 3000
  volumeSize: 80
  volumeThroughput: 125
  volumeType: gp3
  subnets:
    - subnet-0bdce41c0290214be
